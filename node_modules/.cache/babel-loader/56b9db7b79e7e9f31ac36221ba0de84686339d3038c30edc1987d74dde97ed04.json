{"ast":null,"code":"var _jsxFileName = \"/Users/hamzaeshoul/Desktop/Programming/Learning & Notes/HTML, CSS, JS/Odin/Memory-Card-Project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\";\nimport Footer from \"./components/Footer\";\nimport naruto from \"./img/naruto.png\";\nimport sasuke from \"./img/sasuke.png\";\nimport kakashi from \"./img/kakashi.png\";\nimport yahiko from \"./img/yahiko.png\";\nimport itachi from \"./img/itachi.png\";\nimport obito from \"./img/obito.png\";\nimport jiraya from \"./img/jiraya.jpg\";\nimport gaara from \"./img/gaara.jpg\";\nimport madara from \"./img/madara.jpg\";\nimport tsunade from \"./img/tsunade.png\";\nimport minato from \"./img/minato.jpg\";\nimport oroshimaru from \"./img/oroshimaru.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cardArray, setCardArray] = useState([{\n    mainColor: \"bg-red-800\",\n    secondaryColor: \"bg-red-300\",\n    title: \"Naruto Uzumaki\",\n    imgSrc: naruto,\n    key: 1,\n    index: Math.floor(Math.random() * 100 + 1)\n  }, {\n    mainColor: \"bg-gray-700\",\n    secondaryColor: \"bg-gray-600\",\n    title: \"Sasuke Uchiwa\",\n    imgSrc: sasuke,\n    key: 2,\n    index: Math.floor(Math.random() * 100 + 1)\n  }, {\n    mainColor: \"bg-zinc-400\",\n    secondaryColor: \"bg-zinc-300\",\n    title: \"Kakashi Hatake\",\n    imgSrc: kakashi,\n    key: 3,\n    index: Math.floor(Math.random() * 100 + 1)\n  }, {\n    mainColor: \"bg-orange-400\",\n    secondaryColor: \"bg-orange-300\",\n    title: \"Yahiko Uzumaki\",\n    imgSrc: yahiko,\n    key: 4,\n    index: Math.floor(Math.random() * 100 + 1)\n  }, {\n    mainColor: \"bg-sky-700\",\n    secondaryColor: \"bg-sky-300\",\n    title: \"Itachi Uchiwa\",\n    imgSrc: itachi,\n    key: 5,\n    index: Math.floor(Math.random() * 100 + 1)\n  }, {\n    mainColor: \"bg-stone-900\",\n    secondaryColor: \"bg-stone-500\",\n    title: \"Obito Uchiwa\",\n    imgSrc: obito,\n    key: 6,\n    index: Math.floor(Math.random() * 100 + 1)\n  }, {\n    mainColor: \"bg-emerald-800\",\n    secondaryColor: \"bg-emerald-400\",\n    title: \"Jiraya of the Sannin\",\n    imgSrc: jiraya,\n    key: 7,\n    index: Math.floor(Math.random() * 100 + 1)\n  }, {\n    mainColor: \"bg-amber-900\",\n    secondaryColor: \"bg-amber-600\",\n    title: \"Gaara of the Sand\",\n    imgSrc: gaara,\n    key: 8,\n    index: Math.floor(Math.random() * 100 + 1)\n  }, {\n    mainColor: \"bg-fuchsia-800\",\n    secondaryColor: \"bg-fuchsia-400\",\n    title: \"Madara Uchiwa\",\n    imgSrc: madara,\n    key: 9,\n    index: Math.floor(Math.random() * 100 + 1)\n  }, {\n    mainColor: \"bg-teal-800\",\n    secondaryColor: \"bg-teal-500\",\n    title: \"Tsunade Senju\",\n    imgSrc: tsunade,\n    key: 10,\n    index: Math.floor(Math.random() * 100 + 1)\n  }, {\n    mainColor: \"bg-yellow-500\",\n    secondaryColor: \"bg-yellow-200\",\n    title: \"Minato Namikaze\",\n    imgSrc: minato,\n    key: 11,\n    index: Math.floor(Math.random() * 100 + 1)\n  }, {\n    mainColor: \"bg-red-600\",\n    secondaryColor: \"bg-red-300\",\n    title: \"Oroshimaru of the Sanin\",\n    imgSrc: oroshimaru,\n    key: 12,\n    index: Math.floor(Math.random() * 100 + 1)\n  }]);\n  const sortMyArray = () => {\n    const RandomCardArray = cardArray.map(card => {\n      return {\n        mainColor: card.mainColor,\n        secondaryColor: card.secondaryColor,\n        title: card.title,\n        imgSrc: card.imgSrc,\n        key: card.key,\n        index: Math.floor(Math.random() * 120 + 1)\n      };\n    });\n    const sortedRandomArray = RandomCardArray.sort(function (cardA, cardB) {\n      if (cardA.index < cardB.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n    const reverseRandomArray = sortedRandomArray.reverse();\n    setCardArray(reverseRandomArray);\n  };\n  const [score, setScore] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-screen bg-slate-900 font-roboto\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-4 grid-cols-3 grid-rows-4 sm:grid-cols-6 sm:grid-rows-2 h-[70%] px-10 py-4 mb-14\",\n      children: cardArray.map(card => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          bgMainColor: card.mainColor,\n          bgSecondaryColor: card.secondaryColor,\n          cardTitle: card.title,\n          myImg: card.imgSrc,\n          index: card.index,\n          myFn: sortMyArray,\n          myScore: score\n        }, card.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hBFrPwRTapm3vikVljE7KZwM85c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Card","Footer","naruto","sasuke","kakashi","yahiko","itachi","obito","jiraya","gaara","madara","tsunade","minato","oroshimaru","App","cardArray","setCardArray","mainColor","secondaryColor","title","imgSrc","key","index","Math","floor","random","sortMyArray","RandomCardArray","map","card","sortedRandomArray","sort","cardA","cardB","reverseRandomArray","reverse","score","setScore"],"sources":["/Users/hamzaeshoul/Desktop/Programming/Learning & Notes/HTML, CSS, JS/Odin/Memory-Card-Project/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\";\nimport Footer from \"./components/Footer\";\nimport naruto from \"./img/naruto.png\";\nimport sasuke from \"./img/sasuke.png\";\nimport kakashi from \"./img/kakashi.png\";\nimport yahiko from \"./img/yahiko.png\";\nimport itachi from \"./img/itachi.png\";\nimport obito from \"./img/obito.png\";\nimport jiraya from \"./img/jiraya.jpg\";\nimport gaara from \"./img/gaara.jpg\";\nimport madara from \"./img/madara.jpg\";\nimport tsunade from \"./img/tsunade.png\";\nimport minato from \"./img/minato.jpg\";\nimport oroshimaru from \"./img/oroshimaru.jpg\";\n\nfunction App() {\n  const [cardArray, setCardArray] = useState([\n    {\n      mainColor: \"bg-red-800\",\n      secondaryColor: \"bg-red-300\",\n      title: \"Naruto Uzumaki\",\n      imgSrc: naruto,\n      key: 1,\n      index: Math.floor(Math.random() * 100 + 1),\n    },\n    {\n      mainColor: \"bg-gray-700\",\n      secondaryColor: \"bg-gray-600\",\n      title: \"Sasuke Uchiwa\",\n      imgSrc: sasuke,\n      key: 2,\n      index: Math.floor(Math.random() * 100 + 1),\n    },\n    {\n      mainColor: \"bg-zinc-400\",\n      secondaryColor: \"bg-zinc-300\",\n      title: \"Kakashi Hatake\",\n      imgSrc: kakashi,\n      key: 3,\n      index: Math.floor(Math.random() * 100 + 1),\n    },\n    {\n      mainColor: \"bg-orange-400\",\n      secondaryColor: \"bg-orange-300\",\n      title: \"Yahiko Uzumaki\",\n      imgSrc: yahiko,\n      key: 4,\n      index: Math.floor(Math.random() * 100 + 1),\n    },\n    {\n      mainColor: \"bg-sky-700\",\n      secondaryColor: \"bg-sky-300\",\n      title: \"Itachi Uchiwa\",\n      imgSrc: itachi,\n      key: 5,\n      index: Math.floor(Math.random() * 100 + 1),\n    },\n    {\n      mainColor: \"bg-stone-900\",\n      secondaryColor: \"bg-stone-500\",\n      title: \"Obito Uchiwa\",\n      imgSrc: obito,\n      key: 6,\n      index: Math.floor(Math.random() * 100 + 1),\n    },\n    {\n      mainColor: \"bg-emerald-800\",\n      secondaryColor: \"bg-emerald-400\",\n      title: \"Jiraya of the Sannin\",\n      imgSrc: jiraya,\n      key: 7,\n      index: Math.floor(Math.random() * 100 + 1),\n    },\n    {\n      mainColor: \"bg-amber-900\",\n      secondaryColor: \"bg-amber-600\",\n      title: \"Gaara of the Sand\",\n      imgSrc: gaara,\n      key: 8,\n      index: Math.floor(Math.random() * 100 + 1),\n    },\n    {\n      mainColor: \"bg-fuchsia-800\",\n      secondaryColor: \"bg-fuchsia-400\",\n      title: \"Madara Uchiwa\",\n      imgSrc: madara,\n      key: 9,\n      index: Math.floor(Math.random() * 100 + 1),\n    },\n    {\n      mainColor: \"bg-teal-800\",\n      secondaryColor: \"bg-teal-500\",\n      title: \"Tsunade Senju\",\n      imgSrc: tsunade,\n      key: 10,\n      index: Math.floor(Math.random() * 100 + 1),\n    },\n    {\n      mainColor: \"bg-yellow-500\",\n      secondaryColor: \"bg-yellow-200\",\n      title: \"Minato Namikaze\",\n      imgSrc: minato,\n      key: 11,\n      index: Math.floor(Math.random() * 100 + 1),\n    },\n    {\n      mainColor: \"bg-red-600\",\n      secondaryColor: \"bg-red-300\",\n      title: \"Oroshimaru of the Sanin\",\n      imgSrc: oroshimaru,\n      key: 12,\n      index: Math.floor(Math.random() * 100 + 1),\n    },\n  ]);\n\n  const sortMyArray = () => {\n    const RandomCardArray = cardArray.map((card) => {\n      return {\n        mainColor: card.mainColor,\n        secondaryColor: card.secondaryColor,\n        title: card.title,\n        imgSrc: card.imgSrc,\n        key: card.key,\n        index: Math.floor(Math.random() * 120 + 1),\n      };\n    });\n\n    const sortedRandomArray = RandomCardArray.sort(function (cardA, cardB) {\n      if (cardA.index < cardB.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n\n    const reverseRandomArray = sortedRandomArray.reverse();\n\n    setCardArray(reverseRandomArray);\n  };\n\n  const [score, setScore] = useState();\n\n  return (\n    <div className=\"h-screen w-screen bg-slate-900 font-roboto\">\n      {/* Header */}\n      <Header />\n\n      {/* Card Section */}\n      <div className=\"grid gap-4 grid-cols-3 grid-rows-4 sm:grid-cols-6 sm:grid-rows-2 h-[70%] px-10 py-4 mb-14\">\n        {cardArray.map((card) => {\n          return (\n            <Card\n              key={card.key}\n              bgMainColor={card.mainColor}\n              bgSecondaryColor={card.secondaryColor}\n              cardTitle={card.title}\n              myImg={card.imgSrc}\n              index={card.index}\n              myFn={sortMyArray}\n              myScore={score}\n            />\n          );\n        })}\n      </div>\n\n      {/* Footer */}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}